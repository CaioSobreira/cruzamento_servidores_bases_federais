services:

  web_csbf:
    build:
      context: .
      dockerfile: web/Dockerfile
    ports:
      - "80:5000"
    depends_on:
      db_csbf:
        condition: service_healthy
    volumes:
      - ./web:/app
    working_dir: /app
    environment:
      FLASK_APP: main.py
      FLASK_ENV: development
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    command: flask run --host=0.0.0.0


  app_csbf :
    build:
      context: .
      dockerfile: app/Dockerfile
    volumes:
      - ./app/servidores:/app/servidores
      - ./app/resultados:/app/resultados
    depends_on:
      db_csbf:
        condition: service_healthy
    networks:
      - network_csbf

  db_csbf:
    build: ./database/
    ports:
      - "5432:5432"
    command: >
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    volumes:
      # - ./pgdata:/var/lib/postgresql/data
      - ./database/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - network_csbf


networks:
  network_csbf:

